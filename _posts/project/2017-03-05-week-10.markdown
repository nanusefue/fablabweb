---
layout: project
title:  "Output Device [10]"
date:   2017-03-05 12:00:00
author: Marcel Newman
categories:
- project
img: portfolio_10.jpg
thumb: thumb02.jpg
carousel:
#- single01.jpg
#- single02.jpg
#- single03.jpg
tagged: Flat, UI, Development
client: Wonder Corp.
website: http://blacktie.co
---
<h2>Assignment</h2>
<h3>Add an output device to a microcontroller board you've designed and program it to do something</h3>


<p>As part of another assigament (<a target="_blank" href="week-08.html">Week 8</a>) design a board that could be used as an arduino, the idea is not to create a plate for each of the electronic assignaments, there are many boards that use arduino and mircroprocesarores as the Attiny85 / 44/84, in my case I have decided to buy an attiny 84, which is the same as 44 but has 8k of flash memory, allowing to add more lines of code by applying the programming capacity.</p>

<p>In the previous assignment I have also connected a servo motor, in this case I decided to try with an OLED display, since the 8k allowed me to program all the necessary code for it to work.</p>

<h5>Schematic</h5>
<img src="{{ "/assets/img/project/week13/schematic_low.jpg" | prepend: site.baseurl }}" alt='webpage jekyll'>
<h5>Eagle/PCB</h5>

<div class="row">
<div class="col-xs-6  col-lg-6  ">
<img src="{{ "/assets/img/project/week13/board.png" | prepend: site.baseurl }}" alt='webpage jekyll'>
</div>
<div class="col-xs-6  col-lg-6  ">
<img src="{{ "/assets/img/project/week13/tinyduino.jpg" | prepend: site.baseurl }}" alt='webpage jekyll'>
</div>
</div>
<h3>I2C Protocol</h3>
<p>I2C requires a mere two wires, like asynchronous serial, but those two wires can support up to 1008 slave devices. Also, unlike SPI, I2C can support a multi-master system, allowing more than one master to communicate with all devices on the bus (although the master devices canâ€™t talk to each other over the bus and must take turns using the bus lines).</p>

<p>Data rates fall between asynchronous serial and SPI; most I2C devices can communicate at 100kHz or 400kHz. There is some overhead with I2C; for every 8 bits of data to be sent, one extra bit of meta data must be transmitted.</p>

<p>The hardware required to implement I2C is more complex than SPI, but less than asynchronous serial. It can be fairly trivially implemented in software.</p>

<div class="col-xs-12 ">

<img width="900px" src="{{ "/assets/img/project/week10/i2c.png" | prepend: site.baseurl }}" alt='webpage jekyll'>

</div>

<p>Adapt these SCA and SCL port and pin definition to your target.

<ul>
<li>#define SDA     	6		// SDA Port A, Pin 6</li>   
<li>#define SCL		4		// SCL Port A, Pin 4</li>
<li>#define SDA_PORT        PORTA           // SDA Port A</li>
<li>#define SCL_PORT        PORTA           // SCL Port A</li>
</ul>
</p>

<div class="col-xs-10 col-xs-offset-2 col-lg-10 col-lg-offset-2 ">

<img width="600px" src="{{ "/assets/img/project/week10/oled.png" | prepend: site.baseurl }}" alt='webpage jekyll'>
<br>
</div>
<div class="col-xs-12 ">
<br>

{% highlight c++ linenos %}

#include <DigisparkOLED.h>
#include <Wire.h>
#include "img0_128x64c1.h"
#include "digistump_128x64c1.h"


void setup() {
  // put your setup code here, to run once:

  oled.begin();

}

void loop() {
  
  // put your main code here, to run repeatedly:
  oled.fill(0xFF); //fill screen with color
  delay(1000);
  oled.clear(); //all black
  delay(1000);
  //usage: oled.setCursor(X IN PIXELS, Y IN ROWS OF 8 PIXELS STARTING WITH 0);
  oled.setCursor(0, 0); //top left
  oled.setFont(FONT8X16);
  oled.println(F("FABACADENY 2017")); //wrap strings in F() to save RAM!
  oled.setFont(FONT6X8);
  oled.println(F("ESTEBAN OLED!"));
  oled.setCursor(0, 3); //two rows down because the 8x16 font takes two rows of 8
  oled.println(F("BCN")); //println will move the cursor 8 or 16 pixels down (based on the front) and back to X=0
  
  delay(1000);

}
{% endhighlight %}
</div>

<p>Here a video of how the oled works after programming it, the plate is fed through the USB port.</p>
<div class="col-xs-12 ">

<video width="800" controls loop>
  <source src="{{ "/assets/img/project/week10/oled.mp4" | prepend: site.baseurl }}" type="video/mp4">
  Your browser does not support HTML5 video.
</video>
</div>


<h3>Referens</h3>


<p><a href="http://www.avrfreaks.net/forum/i2c-library-attiny84">I2C Attiny</a></p>
<p><a href="https://cdn-shop.adafruit.com/datasheets/SSD1306.pdf">DataSheet Oled</a></p>

<p><a href="https://github.com/digistump/DigistumpArduino/tree/master/digistump-avr/libraries/DigisparkOLED">DigisparkOLED Library</a></p>



